#!/bin/sh
SYMBOLS=/crashprocessor/symbols

echo "Fetching crash reports"

# Note that it's important that files can't be in the middle of being written to
# if we use --remove source-files
rsync -a --itemize-changes --ignore-existing --remove-source-files --inplace --exclude id ${CRASHREPORTHOST}:~/uploads/ reports
ssh $CRASHREPORTHOST 'find ~/uploads -depth -mindepth 1 -type d -empty -delete'

tar -Jcf reports.tar.xz reports

echo "Identifying needed symbols"

# get a list of needed symbols
cd reports
for i in *; do
    minidump_stackwalk $i/$i.dmp ${SYMBOLS} 2>&1 | grep "Couldn't load symbols for: " | cut -c74- | sed 's/|/,/' >>fetchlist.txt
done

# uniquify list of needed symbols
sort -u fetchlist.txt >../fetchlist.txt
rm fetchlist.txt
cd ..

#cat fetchlist.txt

# hit symsrv_convert.exe for missing .pdbs, convert and install into ${SYMBOLS}
python symsrv-fetch.py -v

# XXX: hit cygwin debuginfo packages for missing .dbgs

echo "Generating stackwalks"

# generate stackwalks
cd reports
for i in *; do
    minidump_stackwalk $i/$i.dmp ${SYMBOLS} >$i/$i.txt 2>/dev/null
done
